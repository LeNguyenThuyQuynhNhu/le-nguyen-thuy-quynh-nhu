{
	"info": {
		"_postman_id": "bc80a435-9e7d-4048-bd18-3eaf530b6427",
		"name": "API Basic problem",
		"description": "# ðŸš€ Get started here\n\n**Develop a backend server with ExpressJS Typescript**\n\n_This is backend server with ExpressJS(Model-Service-Controller (MSC)), Typescript, using ORM Sequelize, database PostgreSQL_\n\nRegister user, get all users, get detail, update and delete one user\n\n**Setup environment**\n\n- Setup your database config in _config/config.json_\n    \n\n**To start app**\n\n- _npm install_ or _yarn install_\n    \n- _npm run dev_ to build and start or _npm run build_ and _npm run start-dev_\n    \n\n**API:**\n\n- POST /register: register user\n- GET /users: get all users with more filter: user_name, email, phone, genther, full_name, is_deleted\n- GET /user: get user with filter email\n- PUT /user: update user with email\n- DELETE /user: delete user with email",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8850635"
	},
	"item": [
		{
			"name": "Get all user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users?user_name=&email&phone&genther=&full_name&is_deleted=false",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "user_name",
							"value": ""
						},
						{
							"key": "email",
							"value": null
						},
						{
							"key": "phone",
							"value": null
						},
						{
							"key": "genther",
							"value": ""
						},
						{
							"key": "full_name",
							"value": null
						},
						{
							"key": "is_deleted",
							"value": "false"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Get Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?user_name=&email&phone&genther=Other&full_name",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_name",
									"value": ""
								},
								{
									"key": "email",
									"value": null
								},
								{
									"key": "phone",
									"value": null
								},
								{
									"key": "genther",
									"value": "Other"
								},
								{
									"key": "full_name",
									"value": null
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "893"
						},
						{
							"key": "ETag",
							"value": "W/\"37d-4suyI2QuVdSo4T1KzArtHtgekgU\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:16:15 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"message\": \"Success\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"user_name\": \"keodangyeu\",\n            \"full_name\": \"keodangyeu\",\n            \"email\": \"keodangyeu@gmail.com\",\n            \"phone\": \"0975666666\",\n            \"genther\": \"Other\",\n            \"password\": \"$2b$10$FueSUs5tZySfJQ5/EEVxX.cZgtd5AgNk8nFBgFZMSaJhPbqdsQI2i\",\n            \"createdAt\": \"2024-04-18T17:04:43.373Z\",\n            \"updatedAt\": \"2024-04-18T19:15:00.136Z\"\n        },\n        {\n            \"id\": 7,\n            \"user_name\": \"xoaidangyeu\",\n            \"full_name\": \"xoaidangyeu\",\n            \"email\": \"xoaidangyeu@gmail.com\",\n            \"phone\": \"0975666662\",\n            \"genther\": \"Other\",\n            \"password\": \"$2b$10$FueSUs5tZySfJQ5/EEVxX.BIUWKqmHMC0SeKX21eh6HIZQ8iDqMgy\",\n            \"createdAt\": \"2024-04-18T18:55:33.310Z\",\n            \"updatedAt\": \"2024-04-18T19:15:04.080Z\"\n        },\n        {\n            \"id\": 3,\n            \"user_name\": \"banhdangyeu\",\n            \"full_name\": \"banhdangyeu\",\n            \"email\": \"banhdangyeu@gmail.com\",\n            \"phone\": \"0975666661\",\n            \"genther\": \"Other\",\n            \"password\": \"$2b$10$FueSUs5tZySfJQ5/EEVxX.lggQ53G/56ZmGuO7DW3WSySvttG4Cu6\",\n            \"createdAt\": \"2024-04-18T18:53:01.022Z\",\n            \"updatedAt\": \"2024-04-18T19:15:32.559Z\"\n        }\n    ]\n}"
				},
				{
					"name": "Database error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?user_name=&email&phone&genther=Otherrr&full_name",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_name",
									"value": ""
								},
								{
									"key": "email",
									"value": null
								},
								{
									"key": "phone",
									"value": null
								},
								{
									"key": "genther",
									"value": "Otherrr"
								},
								{
									"key": "full_name",
									"value": null
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "113"
						},
						{
							"key": "ETag",
							"value": "W/\"71-9slspRYqMdkqpxI58kl18ZZd8sM\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:16:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"Database error\",\n    \"message\": \"invalid input value for enum enum_users_genther: \\\"Otherrr\\\"\"\n}"
				}
			]
		},
		{
			"name": "Get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/user?email=camdangyeu@gmail.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user"
					],
					"query": [
						{
							"key": "email",
							"value": "camdangyeu@gmail.com"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user?email=camdangyeu@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "camdangyeu@gmail.com"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "93"
						},
						{
							"key": "ETag",
							"value": "W/\"5d-QHaFxz4dDF3BEQ8ijNG4GEuNMao\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:43:25 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"User not found or is delete\",\n    \"message\": \"User not found or is delete\"\n}"
				},
				{
					"name": "Get user Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user?email=keodangyeu@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "keodangyeu@gmail.com"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "341"
						},
						{
							"key": "ETag",
							"value": "W/\"155-hoSIvh3TPfy6k29M3e2M90PdX3c\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:43:44 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": 2,\n        \"user_name\": \"keodangyeu\",\n        \"full_name\": \"keodangyeu\",\n        \"email\": \"keodangyeu@gmail.com\",\n        \"phone\": \"0975666666\",\n        \"genther\": \"Male\",\n        \"password\": \"$2b$10$EkGaLZ.XS/XieuMbOvFI/.1PubsYR/m/baEa1c7h6aF3zb7LvL8ti\",\n        \"is_deleted\": false,\n        \"createdAt\": \"2024-04-18T19:31:53.485Z\",\n        \"updatedAt\": \"2024-04-18T19:33:17.042Z\"\n    }\n}"
				}
			]
		},
		{
			"name": "register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"full_name\": \"camdangyeu\",\n    \"user_name\": \"camdangyeu\",\n    \"phone\": \"0975666662\",\n    \"genther\": \"Female\",\n    \"email\": \"camdangyeu@gmail.com\",\n    \"password\": \"camdangyeu\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"full_name\": \"banhdangyeu\",\n    \"user_name\": \"banhdangyeu\",\n    \"phone\": \"0975666661\",\n    \"genther\": \"Female\",\n    \"email\": \"banhdangyeu@gmail.com\",\n    \"password\": \"banhdangyeu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "277"
						},
						{
							"key": "ETag",
							"value": "W/\"115-PAG2Ms3nXSxmWpmP6yf4XAMIS9M\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 18:53:01 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"message\": \"Success\",\n    \"data\": {\n        \"genther\": \"Other\",\n        \"id\": 3,\n        \"user_name\": \"banhdangyeu\",\n        \"full_name\": \"banhdangyeu\",\n        \"email\": \"banhdangyeu@gmail.com\",\n        \"phone\": \"0975666661\",\n        \"password\": \"banhdangyeu\",\n        \"updatedAt\": \"2024-04-18T18:53:01.022Z\",\n        \"createdAt\": \"2024-04-18T18:53:01.022Z\"\n    }\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"full_name\": \"banhdangyeu\",\n    \"user_name\": \"banhdangyeu\",\n    \"phone\": \"0975666661\",\n    \"genther\": \"Femaleee\",\n    \"email\": \"banhdangyeu@gmail.com\",\n    \"password\": \"banhdangyeu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "80"
						},
						{
							"key": "ETag",
							"value": "W/\"50-/QBIn51N2vkrPtuhAFcvbb3ceLI\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 18:53:23 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"Validation error\",\n    \"errors\": [\n        \"user_name must be unique\"\n    ]\n}"
				}
			]
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_name\": \"keodangyeu\",\n    \"full_name\": \"keodangyeu\",\n    \"genther\": \"Male\",\n    \"password\": \"keodangyeu\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user?email=keodangyeu@gmail.com&old_password=keodangyeu",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user"
					],
					"query": [
						{
							"key": "email",
							"value": "keodangyeu@gmail.com"
						},
						{
							"key": "old_password",
							"value": "keodangyeu"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Update Success",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"keodangyeu\",\n    \"full_name\": \"keodangyeu\",\n    \"genther\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user?email=keodangyeu@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "keodangyeu@gmail.com"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "343"
						},
						{
							"key": "ETag",
							"value": "W/\"157-eAqFGtWD21QpegiPPGG+h3lYVOs\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:32:10 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"message\": \"Success\",\n    \"data\": [\n        {\n            \"id\": 2,\n            \"user_name\": \"keodangyeu\",\n            \"full_name\": \"keodangyeu\",\n            \"email\": \"keodangyeu@gmail.com\",\n            \"phone\": \"0975666666\",\n            \"genther\": \"Male\",\n            \"password\": \"$2b$10$EkGaLZ.XS/XieuMbOvFI/.1PubsYR/m/baEa1c7h6aF3zb7LvL8ti\",\n            \"is_deleted\": false,\n            \"createdAt\": \"2024-04-18T19:31:53.485Z\",\n            \"updatedAt\": \"2024-04-18T19:32:10.290Z\"\n        }\n    ]\n}"
				},
				{
					"name": "Update error condition",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"keodangyeu\",\n    \"full_name\": \"keodangyeu\",\n    \"genther\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "keodangyeu@gmail.com",
									"disabled": true
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "81"
						},
						{
							"key": "ETag",
							"value": "W/\"51-kKXJVU/RktMsdxKdnTOI+aR/W68\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:32:36 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"\\\"email\\\" is required\",\n    \"message\": \"\\\"email\\\" is required\"\n}"
				},
				{
					"name": "Update user not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"camdangyeu\",\n    \"full_name\": \"camdangyeu\",\n    \"genther\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user?email=camdangyeu@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "camdangyeu@gmail.com"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "95"
						},
						{
							"key": "ETag",
							"value": "W/\"5f-4ZAD7bxgyFB2OsY1VFP9fIy1HCc\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:45:52 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"User not found or is deleted\",\n    \"message\": \"User not found or is deleted\"\n}"
				},
				{
					"name": "miss old pass",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"keodangyeu\",\n    \"full_name\": \"keodangyeu\",\n    \"genther\": \"Male\",\n    \"password\": \"keodangyeu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user?email=keodangyeu@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "keodangyeu@gmail.com"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "95"
						},
						{
							"key": "ETag",
							"value": "W/\"5f-MUjtjO217mpjkCLKDnTcts13LD4\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 20:33:41 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"\\\"old_password\\\" is required\",\n    \"message\": \"\\\"old_password\\\" is required\"\n}"
				},
				{
					"name": "wrong old password",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"keodangyeu\",\n    \"full_name\": \"keodangyeu\",\n    \"genther\": \"Male\",\n    \"password\": \"keodangyeu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user?email=keodangyeu@gmail.com&old_password=keodangyeuuu",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "keodangyeu@gmail.com"
								},
								{
									"key": "old_password",
									"value": "keodangyeuuu"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "75"
						},
						{
							"key": "ETag",
							"value": "W/\"4b-qg88eGhgcl86r4Yp1gNVCDVvWio\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 20:40:45 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"code\": \"Wrong old password\",\n    \"message\": \"Wrong old password\"\n}"
				}
			]
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user?email=camdangyeu@gmail.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user"
					],
					"query": [
						{
							"key": "email",
							"value": "camdangyeu@gmail.com"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Delete user Success",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user?email=camdangyeu@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "email",
									"value": "camdangyeu@gmail.com"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "35"
						},
						{
							"key": "ETag",
							"value": "W/\"23-Zw29h3HPYwAh6Ef5vkZkPzcXOKs\""
						},
						{
							"key": "Date",
							"value": "Thu, 18 Apr 2024 19:36:17 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"message\": \"Success\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}